<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c09afe50-cedd-4a00-bc5e-5792e3d215f3" name="变更" comment="增加get参数">
      <change beforePath="$PROJECT_DIR$/data.xlsx" beforeDir="false" afterPath="$PROJECT_DIR$/data.xlsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../GO" />
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">
    <option name="selectedUrlAndAccountId">
      <UrlAndAccount>
        <option name="accountId" value="0422b585-0b8e-43fd-bd22-43e2bcfa5b38" />
        <option name="url" value="https://github.com/yingjie52/ltest.git" />
      </UrlAndAccount>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2MnkF8KFUGeLNopDHiXRHq6Hhp1" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "D:/gowork/go-stress-testing-master",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\gowork\ltest" />
      <recent name="D:\gowork\ltest\coltest" />
      <recent name="D:\gowork\ltest\124" />
      <recent name="D:\gowork\ltest\123" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build ltest/coltest (1)">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$/coltest" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/run.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/server/server.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/coltest/httprun.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/run.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/coltest/httprun.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest/coltest (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ltest/coltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/coltest/httprun.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest/coltest" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$/coltest" />
      <kind value="DIRECTORY" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$/coltest" />
      <filePath value="$PROJECT_DIR$/coltest/httprun.go" />
      <redirect_input value="true" />
      <method v="2" />
    </configuration>
    <configuration name="go build ltest/coltest123" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$/coltest" />
      <filePath value="$PROJECT_DIR$/coltest/httprun.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$/coltest" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build server.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="ltest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="ltest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/server/server.go" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build ltest/coltest" />
      <item itemvalue="Go 构建.go build main.go" />
      <item itemvalue="Go 构建.go build ltest/coltest123" />
      <item itemvalue="Go 构建.go build ltest/coltest (1)" />
      <item itemvalue="Go 构建.go build server.go" />
      <item itemvalue="Go 构建.go build ltest" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build ltest/coltest (1)" />
        <item itemvalue="Go 构建.go build main.go" />
        <item itemvalue="Go 构建.go build server.go" />
        <item itemvalue="Go 构建.go build ltest" />
        <item itemvalue="Go 构建.go build ltest/coltest123" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="修改文件-初步get" />
    <MESSAGE value="增加get参数" />
    <option name="LAST_COMMIT_MESSAGE" value="增加get参数" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>